<?php

/**
 * Common form elements.
 *
 * @param $settings
 *   An array of the current settings.
 * @return
 *   A form snippet.
 *
 * @see CALLBACK_commerce_payment_method_settings_form
 */
function commerce_saferpay_settings_form($settings = NULL) {

  $settings += array(
      'account_id' => '99867-94913159',
      'password' => 'XAjc3Kna',
      'order_identifier' => '[commerce-order:order-id]-[commerce-order:created]',
      'autocomplete' => TRUE,
      'order_description' => 'Order [commerce-order:order-id] at [site:name]',
  );

  $form['account_id'] = array(
      '#type' => 'textfield',
      '#title' => t('Account ID'),
      '#default_value' => $settings['account_id'],
  );

  $form['password'] = array(
      '#type' => 'textfield',
      '#title' => t('spPassword'),
      '#description' => t('Only required for the test account.'),
      '#default_value' => $settings['password'],
  );
  $form['order_identifier'] = array(
      '#type' => 'textfield',
      '#title' => t('Order identifier'),
      '#description' => t('The order identifier sent to Saferpay Gateway - check Replacement patterns'),
      '#default_value' => $settings['order_identifier'],
  );
  $form['order_description'] = array(
      '#type' => 'textfield',
      '#title' => t('Order description'),
      '#description' => t('The order description displayed on the payment page -  check Replacement patterns'),
      '#default_value' => $settings['order_description'],
  );
  $form['view']['token_help'] = array(
      '#title' => t('Replacement patterns'),
      '#type' => 'fieldset',
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
  );
  $form['view']['token_help']['help'] = array(
      '#theme' => 'token_tree',
      '#token_types' => array('commerce-order'),
  );
  $form['autocomplete'] = array(
      '#type' => 'checkbox',
      '#title' => t('Auto Finalize payment by capture of transaction.'),
      '#default_value' => $settings['autocomplete'],
  );

  return $form;
}

/**
 * Interacts with the saferpay webservice to get the url to make the transaction.
 *
 * @param $order
 *   The order
 *
 * @return
 *   URL to redirect the user to make payment.
 */
function commerce_saferpay_initpay($order, $settings, $instance_id, $data = array()) {

  $data['ACCOUNTID'] = $settings['account_id'];

  if (!empty($settings['password'])) {
    $data['spPassword'] = $settings['password'];
  }


  $url = url('https://www.saferpay.com/hosting/CreatePayInit.asp', array('external' => TRUE, 'query' => $data));

  $return = commerce_saferpay_process_url($url);
  if (strpos($return, 'ERROR') !== FALSE) {
    drupal_set_message($return, 'error');
    drupal_set_message(t('An error occurred during payment.'), 'error');
    // Prevent endless redirection loop.
    drupal_goto();
  }

  return $return;
}

/**
 * Proxy for saferpay's requests.
 *
 * @param $url
 *   The webservice prepared url, i.e. initpay, verifypayconfirm, paycomplete
 *
 * @return
 *   Webservice response.
 */
function commerce_saferpay_process_url($sUrl) {
  $ch = curl_init($sUrl);
  curl_setopt($ch, CURLOPT_PORT, 443);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_HEADER, 0);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  $sReturn = curl_exec($ch);
  curl_close($ch);
  return $sReturn;
}

function commerce_saferpay_confirm_validate($data, $signature) {
  $verify = array(
    'DATA' => $data,
    'SIGNATURE' => $signature,
  );
  $url = url('https://www.saferpay.com/hosting/VerifyPayConfirm.asp', array('external' => TRUE, 'query' => $verify));
  $result = commerce_saferpay_process_url($url);

  if (drupal_substr($result, 0, 3) != 'OK:') {
    return FALSE;
  }
  _commerce_saferpay_confirm_result($result);
  return TRUE;
}

function _commerce_saferpay_confirm_result($result = NULL) {
  $static = &drupal_static(__FUNCTION__);
  if ($result) {
    $static = $result;
  }
  return $static;
}
